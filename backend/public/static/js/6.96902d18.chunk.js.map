{"version":3,"sources":["shared/components/UIElements/Map.js","trees/components/TreeItem.js","trees/components/TreeList.js","trees/pages/UserTrees.js"],"names":["Map","props","mapRef","useRef","center","zoom","useEffect","map","window","google","maps","current","Marker","position","ref","className","style","TreeItem","watering","useHttpClient","isLoading","error","sendRequest","clearError","auth","useContext","AuthContext","useState","showMap","setShowMap","showConfirmModal","setShowConfirmModal","showWaterModal","setShowWaterModal","closeMapHandler","cancelDeleteHandler","cancelWaterHandler","userId","confirmDeleteHandler","a","process","id","JSON","stringify","uid","tid","onDeleteTree","confirmWaterHandler","onWaterTree","lastWatered","parts","split","lastWateringDate","Date","diffInTime","getTime","diffInDays","Math","round","Fragment","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","coordinates","inverse","danger","textAlign","water","Card","LoadingSpinner","asOverlay","src","image","alt","title","type","TreeList","items","length","to","tree","key","needsWatering","location","UserTrees","loadedTrees","setLoadedTrees","responseData","trees","fetchTrees","deletedTreeId","prevTrees","filter","WateredTreeId","reload"],"mappings":"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","file":"static/js/6.96902d18.chunk.js","sourcesContent":["import React, { useRef, useEffect } from 'react';\r\n\r\nimport './Map.css';\r\n\r\nconst Map = props => {\r\n  const mapRef = useRef();\r\n  \r\n  const { center, zoom } = props;\r\n\r\n  useEffect(() => {\r\n    const map = new window.google.maps.Map(mapRef.current, {\r\n      center: center,\r\n      zoom: zoom\r\n    });\r\n  \r\n    new window.google.maps.Marker({ position: center, map: map });\r\n  }, [center, zoom]);  \r\n\r\n  return (\r\n    <div\r\n      ref={mapRef}\r\n      className={`map ${props.className}`}\r\n      style={props.style}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React, { useState, useContext } from \"react\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Modal from \"../../shared/components/UIElements/Modal\";\r\nimport Map from \"../../shared/components/UIElements/Map\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport \"./TreeItem.css\";\r\n\r\nconst TreeItem = (props) => {\r\n\tconst { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\tconst auth = useContext(AuthContext);\r\n\tconst [showMap, setShowMap] = useState(false);\r\n\tconst [showConfirmModal, setShowConfirmModal] = useState(false);\r\n\tconst [showWaterModal, setShowWaterModal] = useState(false);\r\n\r\n\tconst openMapHandler = () => setShowMap(true);\r\n\r\n\tconst closeMapHandler = () => setShowMap(false);\r\n\r\n\tconst showDeleteWarningHandler = () => {\r\n\t\tsetShowConfirmModal(true);\r\n\t};\r\n\r\n\tconst cancelDeleteHandler = () => {\r\n\t\tsetShowConfirmModal(false);\r\n\t};\r\n\r\n\tconst showWaterConfirmHandler = () => {\r\n\t\tsetShowWaterModal(true);\r\n\t};\r\n\r\n\tconst cancelWaterHandler = () => {\r\n\t\tsetShowWaterModal(false);\r\n\t};\r\n\r\n\tconst userId = auth.userId;\r\n\tconst confirmDeleteHandler = async () => {\r\n\t\tsetShowConfirmModal(false);\r\n\t\ttry {\r\n\t\t\tawait sendRequest(\r\n\t\t\t\tprocess.env.REACT_APP_BACKEND_URL + `/trees/${props.id}/delete`,\r\n\t\t\t\t\"PATCH\",\r\n\t\t\t\tJSON.stringify({\r\n\t\t\t\t\tuid: userId,\r\n\t\t\t\t\ttid: props.id,\r\n\t\t\t\t}),\r\n\t\t\t\t{\r\n\t\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\tprops.onDeleteTree(props.id);\r\n\t\t} catch (err) {}\r\n\t};\r\n\r\n\tconst confirmWaterHandler = async () => {\r\n\t\tsetShowWaterModal(false);\r\n\t\ttry {\r\n\t\t\tawait sendRequest(\r\n\t\t\t\tprocess.env.REACT_APP_BACKEND_URL + `/trees/${props.id}/water`,\r\n\t\t\t\t\"PATCH\",\r\n\t\t\t\tJSON.stringify({\r\n\t\t\t\t\tuid: userId,\r\n\t\t\t\t\ttid: props.id,\r\n\t\t\t\t}),\r\n\t\t\t\t{\r\n\t\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\tprops.onWaterTree(props.id);\r\n\t\t} catch (err) {}\r\n\t};\r\n\r\n\tvar watering;\r\n\tif (props.lastWatered != null) {\r\n\t\tvar parts = props.lastWatered.split(\"/\");\r\n\t\tvar lastWateringDate = new Date(parts[0], parts[1] - 1, parts[2]);\r\n\t\tvar today = new Date();\r\n\t\tconst oneDay = 1000 * 60 * 60 * 24;\r\n\t\tconst diffInTime = today.getTime() - lastWateringDate.getTime();\r\n\t\tconst diffInDays = Math.round(diffInTime / oneDay);\r\n\t\tif (diffInDays - 1 == 0) {\r\n\t\t\twatering = \"ΣΗΜΕΡΑ\";\r\n\t\t} else if (diffInDays - 1 == 1) {\r\n\t\t\twatering = \"ΕΧΘΕΣ\";\r\n\t\t} else {\r\n\t\t\twatering = diffInDays - 1 + \" ΜΕΡΕΣ ΠΡΙΝ\";\r\n\t\t}\r\n\t} else {\r\n\t\twatering = \"ΔΕΝ ΕΧΕΙ ΠΟΤΙΣΤΕΙ\";\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<ErrorModal error={error} onClear={clearError} />\r\n\t\t\t<Modal\r\n\t\t\t\tshow={showMap}\r\n\t\t\t\tonCancel={closeMapHandler}\r\n\t\t\t\theader={props.address}\r\n\t\t\t\tcontentClass='tree-item__modal-content'\r\n\t\t\t\tfooterClass='tree-item__modal-actions'\r\n\t\t\t\tfooter={<Button onClick={closeMapHandler}>ΚΛΕΙΣΤΕ</Button>}>\r\n\t\t\t\t<div className='map-container'>\r\n\t\t\t\t\t<Map center={props.coordinates} zoom={16} />\r\n\t\t\t\t</div>\r\n\t\t\t</Modal>\r\n\t\t\t<Modal\r\n\t\t\t\tshow={showConfirmModal}\r\n\t\t\t\tonCancel={cancelDeleteHandler}\r\n\t\t\t\theader='Είστε σίγουροι;'\r\n\t\t\t\tfooterClass='tree-item__modal-actions'\r\n\t\t\t\tfooter={\r\n\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t<Button inverse onClick={cancelDeleteHandler}>\r\n\t\t\t\t\t\t\tΑΚΥΡΩΣΗ\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button danger onClick={confirmDeleteHandler}>\r\n\t\t\t\t\t\t\tΔΙΑΓΡΑΦΗ\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t}>\r\n\t\t\t\t<p style={{ textAlign: \"center\" }}>\r\n\t\t\t\t\tΘέλετε να διαγράψετε αυτό το δέντρο;\r\n\t\t\t\t</p>\r\n\t\t\t</Modal>\r\n\r\n\t\t\t<Modal\r\n\t\t\t\tshow={showWaterModal}\r\n\t\t\t\tonCancel={cancelWaterHandler}\r\n\t\t\t\theader='Είστε σίγουροι;'\r\n\t\t\t\tfooterClass='tree-item__modal-actions'\r\n\t\t\t\tfooter={\r\n\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t<Button danger onClick={cancelWaterHandler}>\r\n\t\t\t\t\t\t\tΑΚΥΡΩΣΗ\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button water onClick={confirmWaterHandler}>\r\n\t\t\t\t\t\t\tΕΠΙΒΕΒΑΙΩΣΗ\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t}>\r\n\t\t\t\t<p style={{ textAlign: \"center\" }}>Ποτίσατε αυτό το δέντρο;</p>\r\n\t\t\t</Modal>\r\n\r\n\t\t\t<li className='tree-item'>\r\n\t\t\t\t<Card className='tree-item__content'>\r\n\t\t\t\t\t{isLoading && <LoadingSpinner asOverlay />}\r\n\t\t\t\t\t<div className='tree-item__image'>\r\n\t\t\t\t\t\t<img src={props.image} alt={props.title} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='tree-item__info'>\r\n\t\t\t\t\t\t<h2>{props.title}</h2>\r\n\t\t\t\t\t\t<h3>{props.address}</h3>\r\n\t\t\t\t\t\t<p>ΕΙΔΟΣ: {props.type}</p>\r\n\t\t\t\t\t\t<p>ΤΕΛΕΥΤΑΙΟ ΠΟΤΙΣΜΑ: {watering}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='tree-item__actions'>\r\n\t\t\t\t\t\t<Button inverse onClick={openMapHandler}>\r\n\t\t\t\t\t\t\tΔΕΙΤΕ ΤΟ ΣΤΟΝ ΧΑΡΤΗ\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<Button water onClick={showWaterConfirmHandler}>\r\n\t\t\t\t\t\t\tΠΟΤΙΣΤΕ\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button danger onClick={showDeleteWarningHandler}>\r\n\t\t\t\t\t\t\tΔΙΑΓΡΑΦΗ\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Card>\r\n\t\t\t</li>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default TreeItem;\r\n","import React from \"react\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport TreeItem from \"./TreeItem\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport \"./TreeList.css\";\r\n\r\nconst TreeList = (props) => {\r\n\tif (props.items.length === 0) {\r\n\t\treturn (\r\n\t\t\t<div className='tree-list center'>\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<h2>Δεν βρέθηκαν υιοθετημένα δέντρα, Μήπως θέλετε να ιυοθετήσετε ένα;</h2>\r\n\t\t\t\t\t<Button to='/map'>Υιοθετήστε ένα δέντρο!</Button>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ul className='tree-list'>\r\n\t\t\t{props.items.map((tree) => (\r\n\t\t\t\t<TreeItem\r\n\t\t\t\t\tkey={tree.id}\r\n\t\t\t\t\tid={tree.id}\r\n\t\t\t\t\timage={\r\n\t\t\t\t\t\t\"https://www.sciencenewsforstudents.org/wp-content/uploads/2020/04/1030_LL_trees-1028x579.png\"\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttitle={tree.title}\r\n\t\t\t\t\tlastWatered={tree.lastWatered}\r\n\t\t\t\t\tneedsWatering={tree.needsWatering}\r\n\t\t\t\t\ttype={tree.type}\r\n\t\t\t\t\taddress={tree.address}\r\n\t\t\t\t\tcoordinates={tree.location}\r\n\t\t\t\t\tonDeleteTree={props.onDeleteTree}\r\n\t\t\t\t\tonWaterTree={props.onWaterTree}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nexport default TreeList;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport TreeList from \"../components/TreeList\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\n\r\nconst UserTrees = () => {\r\n\tconst [loadedTrees, setLoadedTrees] = useState();\r\n\tconst { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\tconst auth = useContext(AuthContext);\r\n\r\n\tconst userId = auth.userId;\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchTrees = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst responseData = await sendRequest(\r\n\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL + `/trees/user/${userId}`\r\n\t\t\t\t);\r\n\t\t\t\tsetLoadedTrees(responseData.trees);\r\n\t\t\t} catch (err) {}\r\n\t\t};\r\n\t\tfetchTrees();\r\n\t}, [sendRequest, userId]);\r\n\r\n\tconst TreeDeletedHandler = (deletedTreeId) => {\r\n\t\tsetLoadedTrees((prevTrees) =>\r\n\t\t\tprevTrees.filter((tree) => tree.id != deletedTreeId)\r\n\t\t);\r\n\t};\r\n\r\n\tconst TreeWaterHandler = (WateredTreeId) => {\r\n\t\twindow.location.reload(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<ErrorModal error={error} onClear={clearError} />\r\n\t\t\t{isLoading && (\r\n\t\t\t\t<div className='center'>\r\n\t\t\t\t\t<LoadingSpinner />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t{!isLoading && loadedTrees && (\r\n\t\t\t\t<TreeList\r\n\t\t\t\t\titems={loadedTrees}\r\n\t\t\t\t\tonDeleteTree={TreeDeletedHandler}\r\n\t\t\t\t\tonWaterTree={TreeWaterHandler}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default UserTrees;\r\n"],"sourceRoot":""}